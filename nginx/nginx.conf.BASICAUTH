# Main configuration file
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;





    server {
        listen 80;
        #server_name localhost;

        # Serve static files from /var/www/html
        location / {
            root /var/www/html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the backend service running on the host machine
        location /ehrbase/ {
            proxy_pass http://host.docker.internal:8080; # Use host.docker.internal to access the host machine
            #proxy_set_header Host $host;
            proxy_set_header Host localhost:8080;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Optional: If you need to pass through CORS headers
                add_header 'Access-Control-Allow-Origin' '*';  # Or specify the allowed origin
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
                add_header 'Access-Control-Allow-Credentials' 'true';
            # Handle preflight OPTIONS requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';  # Or specify the exact origin
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, HEAD';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                return 204;
            }
        }

    }
}